<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
				http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
				http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
				http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	<!-- redis的相关配置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">    
     <!--   <property name="maxTotal" value="2048" />   -->    
       <property name="maxIdle" value="200" />      
       <property name="numTestsPerEvictionRun" value="1024"/>      
       <property name="timeBetweenEvictionRunsMillis" value="30000" />      
       <property name="minEvictableIdleTimeMillis" value="-1" />      
       <property name="softMinEvictableIdleTimeMillis" value="10000" />      
      <!--  <property name="maxWaitMillis" value="1500"/>      --> 
       <property name="testOnBorrow" value="true" />      
       <property name="testWhileIdle" value="true"/>      
       <property name="testOnReturn" value="false"/>      
       <!-- <property name="jmxEnabled" value="true"/>       -->
      <!--  <property name="blockWhenExhausted" value="false"/>      -->
    </bean> 
    
    <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">    
        <constructor-arg index="0" ref="jedisPoolConfig" />    
        <constructor-arg index="1">    
            <list>    
                <bean class="redis.clients.jedis.JedisShardInfo">    
                    <constructor-arg name="host" value="127.0.0.1" />    
                    <constructor-arg name="port" value="6379" />    
                    <constructor-arg name="timeout" value="10000" />   
              <!--     <constructor-arg name="auth" value="1qaz!QAZ"/> -->
                </bean>    
            </list>    
        </constructor-arg>    
    </bean>    
    <bean id="redisDataSource" class="com.shoesback.redis.RedisDataSourceImpl">    
        <property name="shardedJedisPool" ref="shardedJedisPool"></property>    
    </bean>    
    <bean id="redisClientTemplate" class="com.shoesback.redis.RedisClientTemplate">    
        <property name="redisDataSource" ref="redisDataSource"></property>    
    </bean>    
    </beans>  		